node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/act/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/input_quantization/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/input_quantization/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/input_quantization/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "encoder/input_quantization/Pow/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/input_quantization/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/input_quantization/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 127.0
      }
    }
  }
}
node {
  name: "encoder/input_quantization/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -128.0
      }
    }
  }
}
node {
  name: "encoder/input_quantization/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "encoder/tf.compat.v1.pad_3/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\220\276\000\000@\276\000\000H?\000\000`>\000\000\360>\000\000\000\000\000\000@\276\000\000\000\276\000\000 ?\000\000\240>\000\0008\277\000\000(\277\000\000\340>\000\000\000\275\000\000\240\276\000\0000?\000\000\000=\000\000\260\276\000\000x?\000\000X?\000\000\360\276\000\000 \276\000\000P?\000\000P?\000\000\200>\000\000\320>\000\000H?\000\000\300\275\000\000@?\000\000\240>\000\000\320\276\000\000\340>\000\0000?\000\000\300>\000\000x?\000\000\220>\000\000\000\275\000\000\000\275\000\000\300=\000\000p?\000\000\220>\000\000\010?\000\000x?\000\000\220\276\000\000\000\275\000\000\200>\000\000@\277\000\000\360\276\000\000\300>\000\000p?\000\000@?\000\000\200>\000\000\000>\000\000@>\000\000\340\276\000\000\220\276\000\000P\277\000\000\260>\000\000(?\000\000@\276\000\000\220>\000\000@\277\000\0000\277\000\000x?\000\000@\276\000\000\360>\000\000X\277\000\000\300\276\000\000(?\000\000`>\000\000\340\276\000\000\020\277"
      }
    }
  }
}
node {
  name: "encoder/conv2d/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/Pow/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/conv2d/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
      }
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 31.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -32.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp_3/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/conv2d/mul_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/Pow_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/conv2d/Pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
      }
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 31.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -32.0
      }
    }
  }
}
node {
  name: "encoder/conv2d/truediv_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/act/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/act/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "encoder/act/Pow/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/act/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/act/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 127.0
      }
    }
  }
}
node {
  name: "encoder/act/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -128.0
      }
    }
  }
}
node {
  name: "encoder/act/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "encoder/flatten_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\000\000\200\275\000\000\000=\000\000\200\275\000\000\000\275\000\000\300\275\000\000\000\276\000\000\000=\000\000\300=\000\000\000\275\000\000\300=\000\000@>\000\000\000\275\000\000\000\000\000\000\000=\000\000\300=\000\000\000\276\000\000\200\275\000\000\300=\000\000\000\000\000\000\300=\000\000\000>\000\000\000\275\000\000\220\276\000\000\000\275\000\000 \276\000\000\000\275\000\000\000=\000\000\220\276\000\000\200=\000\000\300\275\000\000`>\000\000\000\275\000\000\200\275\000\000 >\000\000 \276\000\000\000=\000\000\000\000\000\000 >\000\000\300\275\000\000\000=\000\000\000\275\000\000\300=\000\000@\276\000\000`>\000\000\200\275\000\000\200\276\000\000\000\276\000\000 \276\000\000 >\000\000\300\275\000\000\200=\000\000\300\275\000\000\000\000\000\000\200\275\000\000\200=\000\000 \276\000\000\000\276\000\000 \276\000\000\000>\000\000\200\275\000\000@\276\000\000\300\275\000\000\300=\000\000\000\000\000\000@>\000\000\200\275\000\000\000=\000\000 \276\000\000 >\000\000\000\275\000\000\000=\000\000\220\276\000\000`\276\000\000\300=\000\000@>\000\000\000\275\000\000\300\275\000\000\000\000\000\000\000\275\000\000`>\000\000\300\275\000\000\000\275\000\000\000\000\000\000\000\276\000\000`\276\000\000\000>\000\000\200=\000\000\000=\000\000\000\275\000\000\000\276\000\000\000\275\000\000\200=\000\000\000=\000\000\000=\000\000 >\000\000\000>\000\000\000\275\000\000\000=\000\000\000\275\000\000\300\275\000\000\000\276\000\000\000\275\000\000`>\000\000\200\275\000\000\200=\000\000\200\275\000\000\200=\000\000\000\000\000\000\300=\000\000`\276\000\000\000>\000\000\000=\000\000\000\276\000\000 >\000\000\000\000\000\000@\276\000\000 >\000\000@\276\000\000\000=\000\000\200\275\000\000\000\276\000\000\000\000\000\000\200=\000\000\000\000\000\000\000>\000\000\300\275\000\000@\276\000\000\000\275\000\000\000\000\000\000\000\276\000\000\000=\000\000\000\275\000\000\200\276\000\000@\276\000\000\300=\000\000\220>\000\000 \276\000\000\000=\000\000\000>\000\000\000\275\000\000\000=\000\000\300\275\000\000@\276\000\000``\276\000\000\000\000\000\000@>\000\000 \276\000\000\000=\000\000\000>\000\000\200\275\000\000`\276\000\000\000\275\000\000 >\000\000\300=\000\000\300=\000\000`>\000\000\300\275\000\000\200>\000\000\000\276\000\000 >\000\000\220\276\000\000\000\000\000\000\000\275\000\000\000\275\000\000@\276\000\000\000\000\000\000\200=\000\000\300=\000\000\200=\000\000\200\275\000\000\000=\000\000\200=\000\000\000\000\000\000\000>\000\000\000\276\000\000`>\000\000\300\275\000\000\000\276\000\000\000\275\000\000\300\275\000\000\200\276\000\000\300\275\000\000\000=\000\000\000\275\000\000\000=\000\000\000\276\000\000\000=\000\000\300\275\000\000\300\275\000\000\300\275\000\000 \276\000\000 >\000\000\000\275\000\000 \276\000\000\000>\000\000\000>\000\000 >\000\000\200\276\000\000\200\275\000\000 \276\000\000\220\276\000\000 >\000\000 >\000\000\000\276\000\000``\276\000\000@>\000\000\000\276\000\000\300=\000\000\200\275\000\000\300\275\000\000\000\000\000\000\300=\000\000\200>\000\000\300=\000\000\000\275\000\000\000>\000\000\200\275\000\000`>\000\000\300\275\000\000\000\276\000\000`\276\000\000\000\000\000\000 \276\000\000\000\275\000\000\200=\000\000\200=\000\000\300\275\000\000\200\275\000\000\220\276\000\000\000\275\000\000 >\000\000\000\000\000\000\200\275\000\000\000=\000\000\000\276\000\000\000\276\000\000 >\000\000\300=\000\000\000\275\000\000\300=\000\000@\276\000\000`\276\000\000`>\000\000\300=\000\000 \276\000\000\300=\000\000\000=\000\000`>\000\000\300\275\000\000\300=\000\000@\276\000\000\000>\000\000\200=\000\000\000>\000\000\000=\000\000\300=\000\000\000=\000\000\000=\000\000\220\276\000\000\000\000\000\000\200=\000\000\300\275\000\000``\276\000\000\000\275\000\000\200=\000\000\000\275\000\000\000\276\000\000\000\000\000\000\000>\000\000\200=\000\000\000\000\000\000\200\275\000\000 \276\000\000\200\276\000\000\000\000\000\000 \276\000\000`\276\000\000\000\276\000\000\200\275\000\000`>\000\000\200\275\000\000\000=\000\000\200\275\000\000\200\275\000\000\200=\000\000\000\000\000\000\000\275\000\000\000>\000\000 >\000\000\300\275\000\000\000>\000\000\000\000\000\000@\276\000\000\000\276\000\000\000\000\000\000 >\000\000\000=\000\000\000>\000\000\000\276\000\000\300\275\000\000\000=\000\000\300\275\000\000\300=\000\000`\276\000\000\300\275\000\000\000=\000\000\000=\000\000\200=\000\000\200=\000\000\220\276\000\000\000\276\000\000\000>\000\000 >\000\000\000\276\000\000 >\000\000\200=\000\000\000=\000\000\000=\000\000\000\276\000\000\300=\000\000\200=\000\000\200\276\000\000\200>\000\000\220\276\000\000\000=\000\000 >\000\000\000\276\000\000\200\275\000\000\300=\000\000\200\275\000\000\000\275\000\000@>\000\000`\276\000\000\300=\000\000\200\275\000\000\000\275\000\000\200\275\000\000\300\275\000\000\000=\000\000\000=\000\000\000=\000\000 >\000\000\300\275\000\000\200=\000\000\000=\000\000\300\275\000\000\300=\000\000\000\275\000\000\200=\000\000\000=\000\000 \276\000\000\000\276\000\000\000=\000\000\000\000\000\000\000=\000\000\000\000\000\000\300\275\000\000\200\275\000\000\000\000\000\000\000>\000\000\000\275\000\000`\276\000\000\000\276\000\000 >\000\000\200\275\000\000\000\275\000\000\000\000\000\000@>\000\000\000\275\000\000\000\000\000\000\200=\000\000\200\275\000\000\200=\000\000\300\275\000\000\000\275\000\000\000=\000\000\000\000\000\000\300\275\000\000\300\275\000\000\000=\000\000\000\275\000\000@\276\000\000\200\276\000\000\300\275\000\000@>\000\000 \276\000\000\000\000\000\000\000\000\000\000\000\275\000\000 >\000\000`>\000\000\000=\000\000@>\000\000\000=\000\000\000\000\000\000\200\275\000\000`>\000\000\000\275\000\000\000>\000\000\000\276\000\000@\276\000\000\000=\000\000\200=\000\000 >\000\000\300=\000\000\000\276\000\000 >\000\000@\276\000\000\200\275\000\000\200\276\000\000@\276\000\000\000\275\000\000\000\275\000\000\200=\000\000@\276\000\000\200\275\000\000\300=\000\000`\276\000\000\000\276\000\000\000\275\000\000\300=\000\000\000=\000\000\200=\000\000\000>\000\000\200\276\000\000\000=\000\000\000\000\000\000\000\276\000\000\200>\000\000\200\276\000\000\300=\000\000\000\000\000\000\220\276\000\000\000=\000\000\000\275\000\000\200=\000\000\000\276\000\000\300=\000\000`>\000\000 \276\000\000\200\275\000\000`\276\000\000 \276\000\000\000\275\000\000\300\275\000\000\200>\000\000 \276\000\000\200\275\000\000 >\000\000\200>\000\000\000=\000\000\000\276\000\000\000\000\000\000 >\000\000\000\000\000\000 \276\000\000\000\000\000\000\000>\000\000`\276\000\000\000=\000\000@\276\000\000`\276\000\000\200\275\000\000\200=\000\000@\276\000\000@>\000\000 >\000\000@\276\000\000\300\275\000\000 >\000\000 >\000\000\200=\000\000\300\275\000\000@\276\000\000\000\000\000\000\000\000\000\000\200\275\000\000\000\000\000\000\200\275\000\000\300\275\000\000\200\276\000\000\000>\000\000\000=\000\000\300\275\000\000\000\275\000\000\000\000\000\000\300=\000\000\000\000\000\000\300=\000\000\200\275\000\000\000\276\000\000\300\275\000\000\000\275\000\000 >\000\000`>\000\000\000\000\000\000 \276\000\000 >\000\000\000>\000\000\000=\000\000\000=\000\000\000\000\000\000\200=\000\000 \276\000\000\200\275\000\000\000\275\000\000\300\275\000\000@\276\000\000\000\000\000\000\000\275\000\000 \276\000\000\000\275\000\000\000\000\000\000\000=\000\000 \276\000\000 \276\000\000\000\000\000\000 \276\000\000\300=\000\000\200=\000\000\200=\000\000\300\275\000\000@>\000\000@\276\000\000\000\276\000\000\000\276\000\000\000=\000\000\000\000\000\000`>\000\000\000=\000\000\000>\000\000\000>\000\000\300=\000\000\300=\000\000`\276\000\000\300=\000\000\000\000\000\000\200=\000\000 >\000\000\200\275\000\000\300=\000\000\000\275\000\000\300\275\000\000\000\275\000\000\000>\000\000\300\275\000\000@\276\000\000\200\275\000\000\200=\000\000\000\000\000\000\300=\000\000\000\275\000\000\200\275\000\000\200=\000\000\000>\000\000\000\275\000\000`>\000\000\200=\000\000\200>\000\000\300\275\000\000\200\275\000\000\000=\000\000\300\275\000\000\000=\000\000\000=\000\000\200\275\000\000 >\000\000 \276\000\000\300\275\000\000\300=\000\000\200=\000\000\200>\000\000\220>\000\000\200=\000\000\000>\000\000\000\275\000\000\000\000\000\000 >\000\000\300\275\000\000\300\275\000\000\200\275\000\000\000\276\000\000@\276\000\000\000\275\000\000\300\275\000\000\000\275\000\000\200\275\000\000 \276\000\000`\276\000\000\200\275\000\000\000\275\000\000\300\275\000\000\000>\000\000\000\275\000\000\200=\000\000\000\276\000\000@\276\000\000\220\276\000\000\000=\000\000\200\275\000\000`\276\000\000 \276\000\000\200=\000\000\000\000\000\000\000\000\000\000\000=\000\000\000\276\000\000\200\275\000\000\200\276\000\000\000\000\000\000\300\275\000\000\000=\000\000 \276\000\000\000=\000\000`>\000\000`>\000\000@\276\000\000\000\275\000\000`\276\000\000\000\275\000\000\000\276\000\000\000>\000\000\300=\000\000`\276\000\000\300=\000\000 \276\000\000\200=\000\000\000\276\000\000\200=\000\000\000\000\000\000\300=\000\000\000>\000\000@\276\000\000\200\276\000\000\200=\000\000@\276\000\000`\276\000\000\300\275\000\000\000>\000\000`>\000\000\200\275\000\000\300\275\000\000\200\276\000\000 >\000\000\000\276\000\000\300\275\000\000@\276\000\000\000\000\000\000\200=\000\000 >\000\000\000\275\000\000\000\275\000\000 >\000\000\200=\000\000`\276\000\000 \276\000\000\000=\000\000\200=\000\000\000\275\000\000`\276\000\000\200=\000\000\200=\000\000\300=\000\000 \276\000\000\000\275\000\000`\276\000\000\000=\000\000``\276\000\000\000\000\000\000\300=\000\000\300\275\000\000\200=\000\000\300\275\000\000\200>\000\000\300=\000\000``\276\000\000\000\275\000\000\300\275\000\000 >\000\000\000\000\000\000\000\276\000\000\200\275\000\000\000\000\000\000`>\000\000\000\000\000\000\000\275\000\000\000\275\000\000\000\275\000\000\300=\000\000\200=\000\000 >\000\000\300\275\000\000\300\275\000\000\000>\000\000\000\275\000\000\300=\000\000\300=\000\000\200=\000\000\000=\000\000\300=\000\000\200\275\000\000 >\000\000\000\275\000\000\000>\000\000\000\275\000\000\300\275\000\000\000=\000\000@>\000\000\300=\000\000\200=\000\000 >\000\000\000\276\000\000\000=\000\000\200\275\000\000 \276\000\000\300=\000\000`>\000\000\300=\000\000\000>\000\000``>\000\000\000>\000\000@>\000\000 >\000\000\300=\000\000\300=\000\000\200\275\000\000\200=\000\000 \276\000\000\220\276\000\000\000>\000\000\300\275\000\000\000=\000\000\300=\000\000`\276\000\000\300=\000\000\000\000\000\000\000>\000\000@\276\000\000\000\275\000\000@\276\000\000\000\276\000\000 \276\000\000 >\000\000\300\275\000\000\000\275\000\000\200>\000\000 >\000\000\000\000\000\000 \276\000\000`\276\000\000\300=\000\000\000>\000\000\200=\000\000\000\275\000\000\200\276\000\000\000\000\000\000\200\275\000\000\000\276\000\000\000\000\000\000\200\276\000\000\200\276\000\000\300=\000\000\300\275\000\000\000\275\000\000@>\000\000@\276\000\000\000\000\000\000\000\275\000\000``>\000\000\000\276\000\000\200>\000\000@>\000\000\000\000\000\000\000\275\000\000 >\000\000\000\000\000\000`\276\000\000\200\276\000\000\000>\000\000@>\000\000 \276\000\000\200=\000\000\300\275\000\000``\276\000\000\000\276\000\000\200=\000\000@\276\000\000\000\276\000\000\300\275\000\000\000\276\000\000\220\276\000\000\300=\000\000\000=\000\000\000=\000\000 \276\000\000\000\000\000\000\200\275\000\000\000\000\000\000\300=\000\000@>\000\000\000=\000\000\000\275\000\000@\276\000\000@\276\000\000\000=\000\000\000\275\000\000\000=\000\000 \276\000\000\300\275\000\000 >\000\000\200\275\000\000\000\276\000\000\200\275\000\000\200>\000\000\220>\000\000\000\275\000\000\300=\000\000 \276\000\000`>\000\000 \276\000\000\000\000\000\000 \276\000\000 \276\000\000\000=\000\000\300=\000\000\200=\000\000\000\000\000\000\000\000\000\000\000\275\000\000\000\276\000\000@>\000\000`>\000\000\000\276\000\000\300\275\000\000\000=\000\000\200\275\000\000\000\275\000\000\000\275\000\000 >\000\000\300\275\000\000\000\276\000\000\000\275\000\000\000\276\000\000\300=\000\000`>\000\000 \276\000\000\000>\000\000\000\275\000\000\200>\000\000 \276\000\000\300=\000\000\200\275\000\000\300\275\000\000\300\275\000\000\200=\000\000\000=\000\000\000\000\000\000\000\000\000\000\000\275\000\000\200\275\000\000\000=\000\000\000\275\000\000\000>\000\000\300\275\000\000@\276\000\000\200=\000\000\000>\000\000 \276\000\000`\276\000\000@\276\000\000\220\276\000\000\200\275\000\000\300=\000\000\000>\000\000\200=\000\000 \276\000\000\200=\000\000\200=\000\000\200\275\000\000\220>\000\000 \276\000\000\220>\000\000\000\275\000\000 \276\000\000 \276\000\000\200\275\000\000\000\276\000\000\300=\000\000\300\275\000\000\000\275\000\000`\276\000\000 \276\000\000\300=\000\000`>\000\000\000\000\000\000\300\275\000\000 \276\000\000\300\275\000\000\000\275\000\000\000=\000\000\220>\000\000\300\275\000\000@\276\000\000\200\275\000\000@\276\000\000\200=\000\000\200\276\000\000\200=\000\000\000=\000\000\200=\000\000\300\275\000\000\220>\000\000@\276\000\000`>\000\000\300\275\000\000\200\275\000\000 >\000\000 \276\000\000\220\276\000\000\200\275\000\000`\276\000\000\000=\000\000@>\000\000\300\275\000\000\200=\000\000\000=\000\000\300\275\000\000\300\275\000\000\300=\000\000@>\000\000\000=\000\000 >\000\000\300=\000\000\000=\000\000\000\000\000\000\000\276\000\000 \276\000\000\000\000\000\000\200\275\000\000\300\275\000\000\300=\000\000\000\000\000\000\000\000\000\000\200\275\000\000\300\275\000\000`>\000\000\000\000\000\000\000\000\000\000\000=\000\000\000\000\000\000\000>\000\000\200\275\000\000\000\275\000\000 \276\000\000@\276\000\000@>\000\000\000\000\000\000\000\000\000\000\300=\000\000\200=\000\000\200=\000\000`>\000\000\000>\000\000\200>\000\000\000=\000\000 \276\000\000\000\275\000\000\200=\000\000\300\275\000\000`\276\000\000\300\275\000\000\300\275\000\000\200\275\000\000 \276\000\000@>\000\000\000\275\000\000\000\276\000\000\200>\000\000 >\000\000\000>\000\000\300\275\000\000\300\275\000\000 >\000\000\000\000\000\000\200\276\000\000\000>\000\000\000\275\000\000\000=\000\000\000\000\000\000@\276\000\000\000\276\000\000\300=\000\000\300\275\000\000\200=\000\000\200=\000\000`\276\000\000\000\275\000\000\000=\000\000\000=\000\000\000\276\000\000\000\276\000\000\200=\000\000\300\275\000\000\200\275\000\000\220\276\000\000\000=\000\000 >\000\000\000\275\000\000 \276\000\000\200\275\000\000\000\276\000\000\300\275\000\000\200\276\000\000\000\000\000\000\000\000\000\000\200=\000\000\000\000\000\000 >\000\000@>\000\000\300\275\000\000@\276\000\000\300=\000\000\000\275\000\000\000>\000\000\200>\000\000 >\000\000\200\275\000\000\200=\000\000\300\275\000\000\000=\000\000\300=\000\000\000\275\000\000\300\275\000\000`>\000\000\200=\000\000\200=\000\000\000\275\000\000@\276\000\000\200\275\000\000 >\000\000 \276\000\000 \276\000\000\000\276\000\000\000\275\000\000\300\275\000\000@\276\000\000\000>\000\000\200=\000\000\000=\000\000\200\275\000\000\300\275\000\000`\276\000\000\000\276\000\000@>\000\000\000\000\000\000\200=\000\000\200\276\000\000\000\275\000\000\300=\000\000\200=\000\000\200\275\000\000\220>\000\000 >\000\000\000\276\000\000\200=\000\000\000\000\000\000\200=\000\000\200=\000\000@\276\000\000\000\000\000\000\200\276\000\000@\276\000\000`\276\000\000\300\275\000\000 \276\000\000`\276\000\000\220\276\000\000\200\275\000\000\000\276\000\000`\276\000\000\000\000\000\000\000\276\000\000\220\276\000\000 >\000\000\300=\000\000\300\275\000\000\000>\000\000 \276\000\000 >\000\000\000\276\000\000\000=\000\000\000\275\000\000\300=\000\000\200\275\000\000\200\275\000\000\000=\000\000\000\276\000\000@>\000\000@>\000\000\200=\000\000\300=\000\000`\276\000\000\000\275\000\000\200\276\000\000\220\276\000\000\200\275\000\000\000>\000\000\000=\000\000\000\275\000\000\300=\000\000\000=\000\000\000\000\000\000\000\000\000\000\200\275\000\000 >\000\000\000\000\000\000\200=\000\000`>\000\000\300=\000\000\200>\000\000\200=\000\000\000\275\000\000\000\000\000\000\220>\000\000\200=\000\000`>\000\000 \276\000\000\000\000\000\000`\276\000\000\300=\000\000\000\000\000\000 >\000\000\300=\000\000\300=\000\000\300=\000\000\000\275\000\000\000\276\000\000\000=\000\000\000\276\000\000\200\275\000\000\300\275\000\000\000\275\000\000 \276\000\000\000>\000\000\000>\000\000@>\000\000@>\000\000`\276\000\000\000\275\000\000\000\275\000\000\000\276\000\000@>\000\000\200=\000\000\000=\000\000\300=\000\000\200\275\000\000\000>\000\000\300\275\000\000\000\276\000\000\200\275\000\000 >\000\000\000=\000\000\200\275\000\000 \276\000\000\200=\000\000 \276\000\000\200=\000\000\200=\000\000\220\276\000\000\000\276\000\000\000\000\000\000\000\276\000\000`\276\000\000\000=\000\000\300=\000\000\000=\000\000\200\275\000\000\000=\000\000\200=\000\000\200=\000\000@>\000\000\000\276\000\000\000\000\000\000\300=\000\000\200=\000\000\000\000\000\000\300=\000\000`\276\000\000\000\276\000\000\300\275\000\000\200=\000\000\200=\000\000\000\275\000\000\000>\000\000 \276\000\000\200=\000\000\000>\000\000@>\000\000`\276\000\000\300\275\000\000\000=\000\000\000\000\000\000\000=\000\000`>\000\000\300=\000\000\000\000\000\000\300\275\000\000\000\275\000\000@>\000\000\200\275\000\000\000\275\000\000\000\275\000\000\000=\000\000\000=\000\000`>\000\000\000\276\000\000@>\000\000\200>\000\000\200\275\000\000\000>\000\000 \276\000\000`\276\000\000\300=\000\000\200\276\000\000\000=\000\000\300\275\000\000`>\000\000\300\275\000\000\200\275\000\000 >\000\000\000>\000\000\000\276\000\000 \276\000\000\200=\000\000\000\000\000\000`>\000\000\000=\000\000\000\275\000\000\000\275\000\000\200>\000\000@>\000\000`>\000\000\000\275\000\000\200\275\000\000\300=\000\000\200\275\000\000\000\000\000\000\300=\000\000\300\275\000\000\000\275\000\000\000>\000\000\200>\000\000\200=\000\000\300\275\000\000 >\000\000\000=\000\000\000\000\000\000\000\000\000\000\000\275\000\000\200\275\000\000\000\000\000\000\000\275\000\000\000>\000\000\000\275\000\000 >\000\000\000>\000\000\000\276\000\000\000\275\000\000\000\000\000\000\000=\000\000\000\000\000\000 >\000\000``>\000\000\000\000\000\000\000=\000\000 >\000\000\000\275\000\000\000=\000\000 >\000\000\000\275\000\000\000\000\000\000`>\000\000\200=\000\000\200\275\000\000\200\275\000\000 \276\000\000\300\275\000\000\000\000\000\000\200=\000\000``\276\000\000\000\275\000\000\200\275\000\000 >\000\000\200=\000\000 >\000\000\200=\000\000\300\275\000\000\300=\000\000\000>\000\000\300=\000\000\200=\000\000\200\275\000\000@\276\000\000\300\275\000\000 \276\000\000\000\275\000\000`\276\000\000`\276\000\000\000\275\000\000\200=\000\000\200\275\000\000\300\275\000\000\000=\000\000`>\000\000\000>\000\000\200\275\000\000\000\275\000\000@>\000\000\200\275\000\000\000>\000\000\000\000\000\000\200\275\000\000\000\276\000\000\000\275\000\000\200\275\000\000`>\000\000`>\000\000\200\276\000\000\200\275\000\000 >\000\000\200\275\000\000\000\275\000\000\000\275\000\000 >\000\000\300=\000\000\200=\000\000\000>\000\000\200\275\000\000\300\275\000\000`\276\000\000\000\000\000\000\300=\000\000@>\000\000\000\000\000\000\000\275\000\000\200=\000\000\000\000\000\000\000\000\000\000\200\275\000\000\000\275\000\000\200=\000\000\200\275\000\000 >\000\000\300\275\000\000\000\276\000\000@\276\000\000\000>\000\000\000\000\000\000\200\275\000\000 >\000\000\200\276\000\000\200=\000\000\000=\000\000\200=\000\000\000=\000\000\000\276\000\000\000\275\000\000\300=\000\000\300=\000\000\000\275\000\000\000>\000\000\200=\000\000\000>\000\000`\276\000\000`>\000\000\200\275\000\000`>\000\000\300\275\000\000\000=\000\000\000=\000\000\200=\000\000\200\276\000\000\200=\000\000\000\000\000\000@>\000\000`>\000\000@\276\000\000\000>\000\000@>\000\000@\276\000\000\000\275\000\000\000\000\000\000\200=\000\000\000\000\000\000\000=\000\000\000=\000\000\200\275\000\000\000\276\000\000\000=\000\000\000\275\000\000\200\275\000\000\300\275\000\000\300=\000\000\000\276\000\000\000>\000\000\000\275\000\000`>\000\000`>\000\000`>\000\000\000\000\000\000\200\276\000\000\300\275\000\000`\276\000\000\300\275\000\000\000\000\000\000 >\000\000\200\276\000\000\200>\000\000\300\275\000\000\000\275\000\000\000=\000\000@>\000\000\000=\000\000\000\275\000\000\000\000\000\000\000=\000\000\000\275\000\000\200>\000\000\000=\000\000\000\000\000\000\000\000\000\000\200\275\000\000``>\000\000\200\275\000\000\300=\000\000\300\275\000\000\200\275\000\000 \276\000\000\300\275\000\000\200>\000\000\200\275\000\000`\276\000\000\300=\000\000\000\000\000\000\000\275\000\000\000=\000\000`>\000\000\200>\000\000\000\275\000\000\200\275\000\000\200=\000\000\200\275\000\000\000\276\000\000\000\275\000\000\000\275\000\000\000>"
      }
    }
  }
}
node {
  name: "encoder/dense/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/dense/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/dense/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/dense/Pow/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/dense/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
      }
    }
  }
}
node {
  name: "encoder/dense/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 31.0
      }
    }
  }
}
node {
  name: "encoder/dense/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -32.0
      }
    }
  }
}
node {
  name: "encoder/dense/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp_3/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/dense/mul_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/dense/mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/dense/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/dense/Pow_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/dense/Pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
      }
    }
  }
}
node {
  name: "encoder/dense/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 31.0
      }
    }
  }
}
node {
  name: "encoder/dense/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -32.0
      }
    }
  }
}
node {
  name: "encoder/dense/truediv_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/Pow/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -256.0
      }
    }
  }
}
node {
  name: "encoder/latent_quantization/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "encoder/tf.math.multiply_3/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "encoder/tf.math.truediv_3/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "encoder/tf.math.minimum_3/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.99609375
      }
    }
  }
}
node {
  name: "encoder/input_quantization/Neg_1"
  op: "Neg"
  input: "x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/mul"
  op: "Mul"
  input: "x"
  input: "encoder/input_quantization/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/Pow"
  op: "Pow"
  input: "encoder/input_quantization/Pow/x"
  input: "encoder/input_quantization/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/input_quantization/Cast"
  op: "Cast"
  input: "encoder/input_quantization/Pow"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/input_quantization/truediv"
  op: "RealDiv"
  input: "encoder/input_quantization/mul"
  input: "encoder/input_quantization/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/Neg"
  op: "Neg"
  input: "encoder/input_quantization/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/Round"
  op: "Round"
  input: "encoder/input_quantization/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/add"
  op: "AddV2"
  input: "encoder/input_quantization/Neg"
  input: "encoder/input_quantization/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/StopGradient"
  op: "StopGradient"
  input: "encoder/input_quantization/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/add_1"
  op: "AddV2"
  input: "encoder/input_quantization/truediv"
  input: "encoder/input_quantization/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/clip_by_value/Minimum"
  op: "Minimum"
  input: "encoder/input_quantization/add_1"
  input: "encoder/input_quantization/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/clip_by_value"
  op: "Maximum"
  input: "encoder/input_quantization/clip_by_value/Minimum"
  input: "encoder/input_quantization/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/mul_1"
  op: "Mul"
  input: "encoder/input_quantization/Cast"
  input: "encoder/input_quantization/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/truediv_1"
  op: "RealDiv"
  input: "encoder/input_quantization/mul_1"
  input: "encoder/input_quantization/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/mul_2"
  op: "Mul"
  input: "encoder/input_quantization/mul_2/x"
  input: "encoder/input_quantization/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/add_2"
  op: "AddV2"
  input: "encoder/input_quantization/Neg_1"
  input: "encoder/input_quantization/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/mul_3"
  op: "Mul"
  input: "encoder/input_quantization/mul_3/x"
  input: "encoder/input_quantization/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/StopGradient_1"
  op: "StopGradient"
  input: "encoder/input_quantization/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/input_quantization/add_3"
  op: "AddV2"
  input: "x"
  input: "encoder/input_quantization/StopGradient_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/tf.compat.v1.pad_3/Pad"
  op: "Pad"
  input: "encoder/input_quantization/add_3"
  input: "encoder/tf.compat.v1.pad_3/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp_2"
  op: "Identity"
  input: "encoder/conv2d/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp_1"
  op: "Identity"
  input: "encoder/conv2d/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/Neg_1"
  op: "Neg"
  input: "encoder/conv2d/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp"
  op: "Identity"
  input: "encoder/conv2d/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/mul"
  op: "Mul"
  input: "encoder/conv2d/ReadVariableOp"
  input: "encoder/conv2d/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/Pow"
  op: "Pow"
  input: "encoder/conv2d/Pow/x"
  input: "encoder/conv2d/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/conv2d/Cast"
  op: "Cast"
  input: "encoder/conv2d/Pow"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/conv2d/truediv"
  op: "RealDiv"
  input: "encoder/conv2d/mul"
  input: "encoder/conv2d/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/Neg"
  op: "Neg"
  input: "encoder/conv2d/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/Round"
  op: "Round"
  input: "encoder/conv2d/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add"
  op: "AddV2"
  input: "encoder/conv2d/Neg"
  input: "encoder/conv2d/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/StopGradient"
  op: "StopGradient"
  input: "encoder/conv2d/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add_1"
  op: "AddV2"
  input: "encoder/conv2d/truediv"
  input: "encoder/conv2d/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value/Minimum"
  op: "Minimum"
  input: "encoder/conv2d/add_1"
  input: "encoder/conv2d/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value"
  op: "Maximum"
  input: "encoder/conv2d/clip_by_value/Minimum"
  input: "encoder/conv2d/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/mul_1"
  op: "Mul"
  input: "encoder/conv2d/Cast"
  input: "encoder/conv2d/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/truediv_1"
  op: "RealDiv"
  input: "encoder/conv2d/mul_1"
  input: "encoder/conv2d/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/mul_2"
  op: "Mul"
  input: "encoder/conv2d/mul_2/x"
  input: "encoder/conv2d/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add_2"
  op: "AddV2"
  input: "encoder/conv2d/Neg_1"
  input: "encoder/conv2d/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/mul_3"
  op: "Mul"
  input: "encoder/conv2d/mul_3/x"
  input: "encoder/conv2d/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/StopGradient_1"
  op: "StopGradient"
  input: "encoder/conv2d/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add_3"
  op: "AddV2"
  input: "encoder/conv2d/ReadVariableOp_2"
  input: "encoder/conv2d/StopGradient_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/convolution"
  op: "Conv2D"
  input: "encoder/tf.compat.v1.pad_3/Pad"
  input: "encoder/conv2d/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp_5"
  op: "Identity"
  input: "encoder/conv2d/ReadVariableOp_3/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp_4"
  op: "Identity"
  input: "encoder/conv2d/ReadVariableOp_3/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/Neg_3"
  op: "Neg"
  input: "encoder/conv2d/ReadVariableOp_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/ReadVariableOp_3"
  op: "Identity"
  input: "encoder/conv2d/ReadVariableOp_3/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/mul_4"
  op: "Mul"
  input: "encoder/conv2d/ReadVariableOp_3"
  input: "encoder/conv2d/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/Pow_1"
  op: "Pow"
  input: "encoder/conv2d/Pow_1/x"
  input: "encoder/conv2d/Pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/conv2d/Cast_1"
  op: "Cast"
  input: "encoder/conv2d/Pow_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/conv2d/truediv_2"
  op: "RealDiv"
  input: "encoder/conv2d/mul_4"
  input: "encoder/conv2d/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/Neg_2"
  op: "Neg"
  input: "encoder/conv2d/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/Round_1"
  op: "Round"
  input: "encoder/conv2d/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add_4"
  op: "AddV2"
  input: "encoder/conv2d/Neg_2"
  input: "encoder/conv2d/Round_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/StopGradient_2"
  op: "StopGradient"
  input: "encoder/conv2d/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add_5"
  op: "AddV2"
  input: "encoder/conv2d/truediv_2"
  input: "encoder/conv2d/StopGradient_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "encoder/conv2d/add_5"
  input: "encoder/conv2d/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/clip_by_value_1"
  op: "Maximum"
  input: "encoder/conv2d/clip_by_value_1/Minimum"
  input: "encoder/conv2d/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/mul_5"
  op: "Mul"
  input: "encoder/conv2d/Cast_1"
  input: "encoder/conv2d/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/truediv_3"
  op: "RealDiv"
  input: "encoder/conv2d/mul_5"
  input: "encoder/conv2d/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/mul_6"
  op: "Mul"
  input: "encoder/conv2d/mul_6/x"
  input: "encoder/conv2d/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add_6"
  op: "AddV2"
  input: "encoder/conv2d/Neg_3"
  input: "encoder/conv2d/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/mul_7"
  op: "Mul"
  input: "encoder/conv2d/mul_7/x"
  input: "encoder/conv2d/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/StopGradient_3"
  op: "StopGradient"
  input: "encoder/conv2d/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/add_7"
  op: "AddV2"
  input: "encoder/conv2d/ReadVariableOp_5"
  input: "encoder/conv2d/StopGradient_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/conv2d/convolution"
  input: "encoder/conv2d/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/act/Neg_1"
  op: "Neg"
  input: "encoder/conv2d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/mul"
  op: "Mul"
  input: "encoder/conv2d/BiasAdd"
  input: "encoder/act/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/Pow"
  op: "Pow"
  input: "encoder/act/Pow/x"
  input: "encoder/act/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/act/Cast"
  op: "Cast"
  input: "encoder/act/Pow"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/act/truediv"
  op: "RealDiv"
  input: "encoder/act/mul"
  input: "encoder/act/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/Neg"
  op: "Neg"
  input: "encoder/act/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/Round"
  op: "Round"
  input: "encoder/act/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/add"
  op: "AddV2"
  input: "encoder/act/Neg"
  input: "encoder/act/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/StopGradient"
  op: "StopGradient"
  input: "encoder/act/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/add_1"
  op: "AddV2"
  input: "encoder/act/truediv"
  input: "encoder/act/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/clip_by_value/Minimum"
  op: "Minimum"
  input: "encoder/act/add_1"
  input: "encoder/act/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/clip_by_value"
  op: "Maximum"
  input: "encoder/act/clip_by_value/Minimum"
  input: "encoder/act/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/mul_1"
  op: "Mul"
  input: "encoder/act/Cast"
  input: "encoder/act/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/truediv_1"
  op: "RealDiv"
  input: "encoder/act/mul_1"
  input: "encoder/act/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/mul_2"
  op: "Mul"
  input: "encoder/act/mul_2/x"
  input: "encoder/act/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/add_2"
  op: "AddV2"
  input: "encoder/act/Neg_1"
  input: "encoder/act/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/mul_3"
  op: "Mul"
  input: "encoder/act/mul_3/x"
  input: "encoder/act/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/StopGradient_1"
  op: "StopGradient"
  input: "encoder/act/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/act/add_3"
  op: "AddV2"
  input: "encoder/conv2d/BiasAdd"
  input: "encoder/act/StopGradient_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/flatten_3/Reshape"
  op: "Reshape"
  input: "encoder/act/add_3"
  input: "encoder/flatten_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp_2"
  op: "Identity"
  input: "encoder/dense/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp_1"
  op: "Identity"
  input: "encoder/dense/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/dense/Neg_1"
  op: "Neg"
  input: "encoder/dense/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp"
  op: "Identity"
  input: "encoder/dense/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/dense/mul"
  op: "Mul"
  input: "encoder/dense/ReadVariableOp"
  input: "encoder/dense/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/Pow"
  op: "Pow"
  input: "encoder/dense/Pow/x"
  input: "encoder/dense/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/dense/Cast"
  op: "Cast"
  input: "encoder/dense/Pow"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/dense/truediv"
  op: "RealDiv"
  input: "encoder/dense/mul"
  input: "encoder/dense/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/Neg"
  op: "Neg"
  input: "encoder/dense/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/Round"
  op: "Round"
  input: "encoder/dense/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add"
  op: "AddV2"
  input: "encoder/dense/Neg"
  input: "encoder/dense/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/StopGradient"
  op: "StopGradient"
  input: "encoder/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add_1"
  op: "AddV2"
  input: "encoder/dense/truediv"
  input: "encoder/dense/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/clip_by_value/Minimum"
  op: "Minimum"
  input: "encoder/dense/add_1"
  input: "encoder/dense/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/clip_by_value"
  op: "Maximum"
  input: "encoder/dense/clip_by_value/Minimum"
  input: "encoder/dense/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/mul_1"
  op: "Mul"
  input: "encoder/dense/Cast"
  input: "encoder/dense/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/truediv_1"
  op: "RealDiv"
  input: "encoder/dense/mul_1"
  input: "encoder/dense/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/mul_2"
  op: "Mul"
  input: "encoder/dense/mul_2/x"
  input: "encoder/dense/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add_2"
  op: "AddV2"
  input: "encoder/dense/Neg_1"
  input: "encoder/dense/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/mul_3"
  op: "Mul"
  input: "encoder/dense/mul_3/x"
  input: "encoder/dense/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/StopGradient_1"
  op: "StopGradient"
  input: "encoder/dense/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add_3"
  op: "AddV2"
  input: "encoder/dense/ReadVariableOp_2"
  input: "encoder/dense/StopGradient_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/MatMul"
  op: "MatMul"
  input: "encoder/flatten_3/Reshape"
  input: "encoder/dense/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp_5"
  op: "Identity"
  input: "encoder/dense/ReadVariableOp_3/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp_4"
  op: "Identity"
  input: "encoder/dense/ReadVariableOp_3/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/dense/Neg_3"
  op: "Neg"
  input: "encoder/dense/ReadVariableOp_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/ReadVariableOp_3"
  op: "Identity"
  input: "encoder/dense/ReadVariableOp_3/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/dense/mul_4"
  op: "Mul"
  input: "encoder/dense/ReadVariableOp_3"
  input: "encoder/dense/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/Pow_1"
  op: "Pow"
  input: "encoder/dense/Pow_1/x"
  input: "encoder/dense/Pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/dense/Cast_1"
  op: "Cast"
  input: "encoder/dense/Pow_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/dense/truediv_2"
  op: "RealDiv"
  input: "encoder/dense/mul_4"
  input: "encoder/dense/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/Neg_2"
  op: "Neg"
  input: "encoder/dense/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/Round_1"
  op: "Round"
  input: "encoder/dense/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add_4"
  op: "AddV2"
  input: "encoder/dense/Neg_2"
  input: "encoder/dense/Round_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/StopGradient_2"
  op: "StopGradient"
  input: "encoder/dense/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add_5"
  op: "AddV2"
  input: "encoder/dense/truediv_2"
  input: "encoder/dense/StopGradient_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "encoder/dense/add_5"
  input: "encoder/dense/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/clip_by_value_1"
  op: "Maximum"
  input: "encoder/dense/clip_by_value_1/Minimum"
  input: "encoder/dense/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/mul_5"
  op: "Mul"
  input: "encoder/dense/Cast_1"
  input: "encoder/dense/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/truediv_3"
  op: "RealDiv"
  input: "encoder/dense/mul_5"
  input: "encoder/dense/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/mul_6"
  op: "Mul"
  input: "encoder/dense/mul_6/x"
  input: "encoder/dense/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add_6"
  op: "AddV2"
  input: "encoder/dense/Neg_3"
  input: "encoder/dense/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/mul_7"
  op: "Mul"
  input: "encoder/dense/mul_7/x"
  input: "encoder/dense/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/StopGradient_3"
  op: "StopGradient"
  input: "encoder/dense/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/add_7"
  op: "AddV2"
  input: "encoder/dense/ReadVariableOp_5"
  input: "encoder/dense/StopGradient_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/dense/MatMul"
  input: "encoder/dense/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/latent_quantization/Neg_1"
  op: "Neg"
  input: "encoder/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/mul"
  op: "Mul"
  input: "encoder/dense/BiasAdd"
  input: "encoder/latent_quantization/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/Pow"
  op: "Pow"
  input: "encoder/latent_quantization/Pow/x"
  input: "encoder/latent_quantization/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/latent_quantization/Cast"
  op: "Cast"
  input: "encoder/latent_quantization/Pow"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/latent_quantization/truediv"
  op: "RealDiv"
  input: "encoder/latent_quantization/mul"
  input: "encoder/latent_quantization/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/Neg"
  op: "Neg"
  input: "encoder/latent_quantization/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/Round"
  op: "Round"
  input: "encoder/latent_quantization/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/add"
  op: "AddV2"
  input: "encoder/latent_quantization/Neg"
  input: "encoder/latent_quantization/Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/StopGradient"
  op: "StopGradient"
  input: "encoder/latent_quantization/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/add_1"
  op: "AddV2"
  input: "encoder/latent_quantization/truediv"
  input: "encoder/latent_quantization/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/clip_by_value/Minimum"
  op: "Minimum"
  input: "encoder/latent_quantization/add_1"
  input: "encoder/latent_quantization/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/clip_by_value"
  op: "Maximum"
  input: "encoder/latent_quantization/clip_by_value/Minimum"
  input: "encoder/latent_quantization/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/mul_1"
  op: "Mul"
  input: "encoder/latent_quantization/Cast"
  input: "encoder/latent_quantization/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/truediv_1"
  op: "RealDiv"
  input: "encoder/latent_quantization/mul_1"
  input: "encoder/latent_quantization/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/mul_2"
  op: "Mul"
  input: "encoder/latent_quantization/mul_2/x"
  input: "encoder/latent_quantization/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/add_2"
  op: "AddV2"
  input: "encoder/latent_quantization/Neg_1"
  input: "encoder/latent_quantization/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/mul_3"
  op: "Mul"
  input: "encoder/latent_quantization/mul_3/x"
  input: "encoder/latent_quantization/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/StopGradient_1"
  op: "StopGradient"
  input: "encoder/latent_quantization/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/latent_quantization/add_3"
  op: "AddV2"
  input: "encoder/dense/BiasAdd"
  input: "encoder/latent_quantization/StopGradient_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/tf.math.multiply_3/Mul"
  op: "Mul"
  input: "encoder/latent_quantization/add_3"
  input: "encoder/tf.math.multiply_3/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/tf.math.floor_3/Floor"
  op: "Floor"
  input: "encoder/tf.math.multiply_3/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/tf.math.truediv_3/truediv"
  op: "RealDiv"
  input: "encoder/tf.math.floor_3/Floor"
  input: "encoder/tf.math.truediv_3/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/tf.math.minimum_3/Minimum"
  op: "Minimum"
  input: "encoder/tf.math.truediv_3/truediv"
  input: "encoder/tf.math.minimum_3/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "NoOp"
  op: "NoOp"
  input: "^encoder/conv2d/ReadVariableOp"
  input: "^encoder/conv2d/ReadVariableOp_1"
  input: "^encoder/conv2d/ReadVariableOp_2"
  input: "^encoder/conv2d/ReadVariableOp_3"
  input: "^encoder/conv2d/ReadVariableOp_4"
  input: "^encoder/conv2d/ReadVariableOp_5"
  input: "^encoder/dense/ReadVariableOp"
  input: "^encoder/dense/ReadVariableOp_1"
  input: "^encoder/dense/ReadVariableOp_2"
  input: "^encoder/dense/ReadVariableOp_3"
  input: "^encoder/dense/ReadVariableOp_4"
  input: "^encoder/dense/ReadVariableOp_5"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "encoder/tf.math.minimum_3/Minimum"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 1482
}
